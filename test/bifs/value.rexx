/* VALUE */
say "Look for VALUE OK"
/* These from the Rexx book. */
drop A3; A33=7; K=3; fred='K'; list.5='?'
if value('a'k) \== 'A3' then say 'failed in test 1 '
if value('a'k||k) \== '7' then say 'failed in test 2 '
if value('fred') \== 'K' then say 'failed in test 3 '
if value(fred) \== '3' then say 'failed in test 4 '
if value(fred,5) \== '3' then say 'failed in test 5 '
if value(fred) \== '5' then say 'failed in test 6 '
if value('LIST.'k) \== '?' then say 'failed in test 7 '
/* These from Mark Hessling. */
x.a = 'asdf'
x.b = 'foo'
x.c = 'A'
a = 'B'
b = 'C'
c = 'A'
if value('a') \== 'B' then say 'failed in test 8 '
if value(a) \== 'C' then say 'failed in test 9 '
if value(c) \== 'B' then say 'failed in test 10 '
if value('c') \== 'A' then say 'failed in test 11 '
if value('x.A') \== 'foo' then say 'failed in test 12 '
if value(x.B) \== 'B' then say 'failed in test 13 '
if value('x.B') \== 'A' then say 'failed in test 14 '
if value('x.'||a) \== 'A' then say 'failed in test 15 '
if value(value(x.b)) \== 'C' then say 'failed in test 16 '
xyzzy = 'foo'
if value('xyzzy') \== 'foo' then say 'failed in test 17 '
if value('xyzzy','bar') \== 'foo' then say 'failed in test 18 '
if value('xyzzy') \== 'bar' then say 'failed in test 19 '
if value('xyzzy','bar') \== 'bar' then say 'failed in test 20 '
if value('xyzzy') \== 'bar' then say 'failed in test 21 '
if value('xyzzy','foo') \== 'bar' then say 'failed in test 22 '
if value('xyzzy') \== 'foo' then say 'failed in test 23 '
xyzzy = 'void'
if os = 'UNIX' Then
envvar = '$xyzzy'
else
envvar = '%xyzzy%'
/* System dependent
call value 'xyzzy', 'bar', 'SYSTEM'
if value('xyzzy', 'bar', 'SYSTEM') \== 'bar' then say 'failed in test 24 '
if value('xyzzy',, 'SYSTEM') \== 'bar' then say 'failed in test 25 '
if value('xyzzy', , 'SYSTEM') \== 'echo'(envvar) then say 'failed in test 26 '
if value('xyzzy', 'foo', 'SYSTEM') \== 'bar' then say 'failed in test 27 '
if value('xyzzy', 'bar', 'SYSTEM') \== 'foo' then say 'failed in test 28 '
if value('xyzzy', , 'SYSTEM') \== 'echo'(envvar) then say 'failed in test 29 '
if value('xyzzy', , 'SYSTEM') \== 'bar' then say 'failed in test 30 '
if value('xyzzy', 'foo', 'SYSTEM') \== 'bar' then say 'failed in test 31 '
if value('xyzzy', , 'SYSTEM') \== 'echo'(envvar) then say 'failed in test 32 '
*/
say "VALUE OK"
