/* REXX */
/* Test case generated from add_test.in */
Signal On Syntax
cnt.=0
Call ver 1000000000-1              ,  1.00000000E+9
Call ver 100000000e1-1             ,  1.00000000E+9
Call ver 1.000000000e9-1           ,  1.00000000E+9
Call ver 1.0000000000e9-1          ,  1.00000000E+9
Call ver 1.00000000000e9-1         ,  1.00000000E+9
Call ver 1e9-1                     ,  1.00000000E+9
Call ver 1000000000-10             ,  999999990
Call ver 100000000e1-10            ,  999999990
Call ver 1.000000000e9-10          ,  999999990
Call ver 1.0000000000e9-10         ,  999999990
Call ver 1.00000000000e9-10        ,  999999990
Call ver 1e9-10                    ,  999999990
Call ver 1000000000-999999999      ,  0
Call ver 100000000e1-999999999     ,  0
Call ver 1.000000000e9-999999999   ,  0
Call ver 1.0000000000e9-999999999  ,  0
Call ver 1.00000000000e9-999999999 ,  0
Call ver 1e9-999999999             ,  0
Call ver 1000000000-999999990      ,  10
Call ver 100000000e1-999999990     ,  10
Call ver 1.000000000e9-999999990   ,  10
Call ver 1.0000000000e9-999999990  ,  10
Call ver 1.00000000000e9-999999990 ,  10
Call ver 1e9-999999990             ,  10
Call ver 1e9-5                     ,  1.00000000E+9
Call ver 1e9-6                     ,  999999990
Call ver 1e9-15                    ,  999999990
Call ver 1e9-16                    ,  999999980
id=29
1e9+aaa
Call err "SYNTAX" ID
R29:
id=''
Call over
Call over
over:
Parse Arg how
Say how
Say cnt.0ok  'ok'
Say cnt.0err 'errors'
Select
  When how<>'' Then   Exit 12
  When cnt.err=0 Then Exit 0
  Otherwise           Exit 8
  End

syntax:
If id<>'' Then Do
  say 'expected syntax error in case' id
  cnt.0ok=cnt.0ok+1
  Signal On Syntax
  Interpret 'Signal R'id
  End
Else Do
  say 'Unexpected syntax error in line' sigl
  cnt.0err=cnt.0err+1
  Call over 'premature end'
  End

novalue:
If id<>'' Then Do
  say 'Expected novalue raised in case' id
  cnt.0ok=cnt.0ok+1
  Signal On Novalue
  Interpret 'Signal R'id
  End
Else Do
  say 'Unexpected syntax error in line' sigl
  cnt.0err=cnt.0err+1
  Call over 'premature end'
  End

ver:
If arg(1)=arg(2) Then
  cnt.0ok=cnt.0ok+1
Else Do
  say 'verify error in case' sigl
  cnt.0err=cnt.0err+1
  Say cnt.0err
  End
Return

err:
  Parse Arg w
  Say 'Expected' w 'condition not raised id='id
  cnt.0err=cnt.0err+1
  Return
